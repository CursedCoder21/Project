var request = require('request'),
    qs = require("querystring")


var ShodanClient = function(options) {
  this.key = options.key || "";
  this.baseURL = options.baseURL || "http://www.shodanhq.com/api/";
};

ShodanClient.prototype.get = function(path, params, callback) {
  var args = { "method": "GET" };
  params.key = this.key;
  args.url = this.baseURL + path + "?" + qs.stringify(params);
  request(args, function(err, response, body) {
    callback(err, body ? JSON.parse(body) : null);
  });
};

ShodanClient.prototype.search = function(options, callback) {
  if (typeof options === 'string') { options = { q: options }; }
  this.get("search_exploits", options, callback);
};

ShodanClient.prototype.host = function(ip, callback) {
  this.get("host", { ip: ip }, callback);
};

ShodanClient.prototype.exploitdbSearch = function(options, callback) {
  if (typeof options === 'string') { options = { q: options }; }
  this.get("exploitdb/search", options, callback);
};

ShodanClient.prototype.exploitdbDownload = function(id, callback) {
  this.get("exploitdb/download", { id: id }, callback);
};

ShodanClient.prototype.msfSearch = function(options, callback) {
  if (typeof options === 'string') { options = { q: options }; }
  this.get("msf/search", options, callback);
};

ShodanClient.prototype.msfDownload = function(id, callback) {
  this.get("msf/download", { id: id }, callback);
};


exports.createClient = function(opts) {
  return new ShodanClient(opts);
};

exports.print = function (err, reply) {
  if (err) {
    console.log("Error:", err);
  } else {
    console.log("Reply:", reply);
  }
};